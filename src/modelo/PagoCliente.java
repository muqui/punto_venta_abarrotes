package modelo;
// Generated 21/12/2018 12:33:33 PM by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PagoCliente generated by hbm2java
 */
@Entity
@Table(name="pago_cliente"
    
)
public class PagoCliente  implements java.io.Serializable {


     private Integer idpagoCliente;
     private Cliente cliente;
     private Date fecha;
     private BigDecimal cantidad;

    public PagoCliente() {
    }

    public PagoCliente(Cliente cliente, Date fecha, BigDecimal cantidad) {
       this.cliente = cliente;
       this.fecha = fecha;
       this.cantidad = cantidad;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idpago_cliente", unique=true, nullable=false)
    public Integer getIdpagoCliente() {
        return this.idpagoCliente;
    }
    
    public void setIdpagoCliente(Integer idpagoCliente) {
        this.idpagoCliente = idpagoCliente;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="cliente_idcliente", nullable=false)
    public Cliente getCliente() {
        return this.cliente;
    }
    
    public void setCliente(Cliente cliente) {
        this.cliente = cliente;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="fecha", nullable=false, length=10)
    public Date getFecha() {
        return this.fecha;
    }
    
    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }

    
    @Column(name="cantidad", nullable=false, precision=18)
    public BigDecimal getCantidad() {
        return this.cantidad;
    }
    
    public void setCantidad(BigDecimal cantidad) {
        this.cantidad = cantidad;
    }




}


